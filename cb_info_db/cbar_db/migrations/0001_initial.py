# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-05-12 07:12
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import localflavor.us.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdaptationsNeeded',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('mount_assistance_required', models.CharField(choices=[('I', 'Independent'), ('M', 'Minimal assistance'), ('F', 'Full assistance')], max_length=1, null=True)),
                ('mount_device_needed', models.CharField(choices=[('P', 'Portable block'), ('S', 'Static block'), ('R', 'Ramp')], max_length=1, null=True)),
                ('mount_type', models.CharField(choices=[('T', 'Over crest'), ('P', 'Over croup')], max_length=1, null=True)),
                ('dismount_assistance_required', models.CharField(choices=[('I', 'Independent'), ('M', 'Minimal assistance'), ('F', 'Full assistance')], max_length=1, null=True)),
                ('dismount_type', models.CharField(choices=[('A', 'Over croup'), ('B', 'Over croup with left foot in stirrup'), ('C', 'Over crest')], max_length=1, null=True)),
                ('posture_standing', models.CharField(choices=[('I', 'Independent'), ('M', 'Minimal asst.'), ('F', 'Full asst.'), ('N', 'n/a')], default='N', max_length=1, null=True)),
                ('posture_sitting', models.CharField(choices=[('I', 'Independent'), ('M', 'Minimal asst.'), ('F', 'Full asst.'), ('N', 'n/a')], default='N', max_length=1, null=True)),
                ('posture_mounted', models.CharField(choices=[('I', 'Independent'), ('M', 'Minimal asst.'), ('F', 'Full asst.'), ('N', 'n/a')], default='N', max_length=1, null=True)),
                ('ambulatory_status', models.CharField(choices=[('I', 'Walks independently'), ('C', 'Independent with cane/bronco/walker'), ('N', 'Wheelchair with minimal or no assistance'), ('A', 'Wheelchair with full assistance'), ('O', 'Other')], max_length=1, null=True)),
                ('ambulatory_status_other', models.CharField(max_length=100, null=True)),
                ('gait_flat', models.CharField(choices=[('I', 'Independent'), ('M', 'Minimal asst.'), ('F', 'Full asst.'), ('N', 'n/a')], default='N', max_length=1, null=True)),
                ('gait_uneven', models.CharField(choices=[('I', 'Independent'), ('M', 'Minimal asst.'), ('F', 'Full asst.'), ('N', 'n/a')], default='N', max_length=1, null=True)),
                ('gait_incline', models.CharField(choices=[('I', 'Independent'), ('M', 'Minimal asst.'), ('F', 'Full asst.'), ('N', 'n/a')], default='N', max_length=1, null=True)),
                ('gait_decline', models.CharField(choices=[('I', 'Independent'), ('M', 'Minimal asst.'), ('F', 'Full asst.'), ('N', 'n/a')], default='N', max_length=1, null=True)),
                ('gait_stairs', models.CharField(choices=[('I', 'Independent'), ('M', 'Minimal asst.'), ('F', 'Full asst.'), ('N', 'n/a')], default='N', max_length=1, null=True)),
                ('gait_balance', models.CharField(choices=[('I', 'Independent'), ('M', 'Minimal asst.'), ('F', 'Full asst.'), ('N', 'n/a')], default='N', max_length=1, null=True)),
                ('gait_standing_up', models.CharField(choices=[('I', 'Independent'), ('M', 'Minimal asst.'), ('F', 'Full asst.'), ('N', 'n/a')], default='N', max_length=1, null=True)),
                ('gait_sitting_down', models.CharField(choices=[('I', 'Independent'), ('M', 'Minimal asst.'), ('F', 'Full asst.'), ('N', 'n/a')], default='N', max_length=1, null=True)),
                ('gait_straddle_up', models.CharField(choices=[('I', 'Independent'), ('M', 'Minimal asst.'), ('F', 'Full asst.'), ('N', 'n/a')], default='N', max_length=1, null=True)),
                ('gait_straddle_down', models.CharField(choices=[('I', 'Independent'), ('M', 'Minimal asst.'), ('F', 'Full asst.'), ('N', 'n/a')], default='N', max_length=1, null=True)),
                ('num_sidewalkers_walk_spotter', models.DecimalField(decimal_places=0, max_digits=1, null=True)),
                ('num_sidewalkers_walk_heel_hold', models.DecimalField(decimal_places=0, max_digits=1, null=True)),
                ('num_sidewalkers_walk_over_thigh', models.DecimalField(decimal_places=0, max_digits=1, null=True)),
                ('num_sidewalkers_walk_other', models.DecimalField(decimal_places=0, max_digits=1, null=True)),
                ('num_sidewalkers_trot_spotter', models.DecimalField(decimal_places=0, max_digits=1, null=True)),
                ('num_sidewalkers_trot_heel_hold', models.DecimalField(decimal_places=0, max_digits=1, null=True)),
                ('num_sidewalkers_trot_over_thigh', models.DecimalField(decimal_places=0, max_digits=1, null=True)),
                ('num_sidewalkers_trot_other', models.DecimalField(decimal_places=0, max_digits=1, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AuthorizedUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('authorized_user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AuthorizeEmergencyMedicalTreatment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('pref_medical_facility', models.CharField(max_length=70)),
                ('insurance_provider', models.CharField(max_length=70)),
                ('insurance_policy_num', models.CharField(max_length=20)),
                ('emerg_contact_name', models.CharField(max_length=75)),
                ('emerg_contact_phone', localflavor.us.models.PhoneNumberField(max_length=20)),
                ('emerg_contact_relation', models.CharField(max_length=50)),
                ('alt_emerg_procedure', models.CharField(max_length=500, null=True)),
                ('consents_emerg_med_treatment', models.CharField(choices=[('Y', 'consent'), ('N', 'do not consent')], max_length=1)),
                ('signature', models.CharField(max_length=75)),
            ],
        ),
        migrations.CreateModel(
            name='BackgroundCheck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('signature', models.CharField(max_length=75)),
                ('driver_license_num', models.CharField(max_length=18)),
            ],
        ),
        migrations.CreateModel(
            name='Caregiver',
            fields=[
                ('caregiver_ID', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=75)),
                ('phone', localflavor.us.models.PhoneNumberField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='ConfidentialityPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('agreement', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagnosis', models.CharField(max_length=255)),
                ('diagnosis_type', models.CharField(choices=[('P', 'Primary'), ('S', 'Secondary')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Donation',
            fields=[
                ('donation_id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('donation_type', models.CharField(choices=[('H', 'Horse adoption'), ('P', 'Participant adoption'), ('M', 'Monetary donation')], max_length=1)),
                ('purpose', models.CharField(max_length=100, null=True)),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Donor',
            fields=[
                ('donor_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=75)),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='EvalAttitude',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('walking_through_barn_willing', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('walking_through_barn_motivated', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('walking_through_barn_appearance', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('looking_at_horses_willing', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('looking_at_horses_motivated', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('looking_at_horses_appearance', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('petting_horses_willing', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('petting_horses_motivated', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('petting_horses_appearance', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('up_down_ramp_willing', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('up_down_ramp_motivated', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('up_down_ramp_appearance', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('mounting_before_willing', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('mounting_before_motivated', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('mounting_before_appearance', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('mounting_after_willing', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('mounting_after_motivated', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('mounting_after_appearance', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('riding_before_willing', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('riding_before_motivated', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('riding_before_appearance', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('riding_during_willing', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('riding_during_motivated', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('riding_during_appearance', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('riding_after_willing', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('riding_after_motivated', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('riding_after_appearance', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('understands_directions_willing', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('understands_directions_motivated', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('understands_directions_appearance', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('participates_exercises_willing', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('participates_exercises_motivated', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('participates_exercises_appearance', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('participates_games_willing', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('participates_games_motivated', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('participates_games_appearance', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('general_attitude_willing', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('general_attitude_motivated', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('general_attitude_appearance', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('-', 'N/A')], default='-', max_length=1)),
                ('comprehension', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts')], max_length=1)),
                ('confidence', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts')], max_length=1)),
                ('attention', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts')], max_length=1)),
                ('relaxation', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='EvalHorsemanship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('rules_and_reasons', models.NullBooleanField()),
                ('parts_of_horse', models.NullBooleanField()),
                ('parts_of_saddle_english', models.NullBooleanField()),
                ('parts_of_saddle_western', models.NullBooleanField()),
                ('parts_of_bridle_english', models.NullBooleanField()),
                ('parts_of_bridle_western', models.NullBooleanField()),
                ('approach_tied_horse', models.NullBooleanField()),
                ('methods_of_tying', models.NullBooleanField()),
                ('halter', models.NullBooleanField()),
                ('lead', models.NullBooleanField()),
                ('groom', models.NullBooleanField()),
                ('can_saddle_horse_english', models.NullBooleanField()),
                ('can_saddle_horse_western', models.NullBooleanField()),
                ('can_bridle_horse_english', models.NullBooleanField()),
                ('can_bridle_horse_western', models.NullBooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='EvalPhysical',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('arms_head_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('arms_head_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('arms_side_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('arms_side_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('touch_tail_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('touch_talk_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('twist_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('twist_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('touch_ears_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('touch_ears_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('arm_circle_back_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('arm_circle_back_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('arm_circle_fwd_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('arm_circle_fwd_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('hand_circle_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('hand_circle_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('touch_right_tow_w_left_hand_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('touch_right_tow_w_left_hand_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('touch_left_tow_w_right_hand_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('touch_left_tow_w_right_hand_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('touch_both_toes_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('touch_both_toes_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('swing_legs_back_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('swing_legs_back_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('swing_legs_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('swing_legs_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('stand_in_stirrups_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('stand_in_stirrups_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('bend_foot_up_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('bend_foot_up_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('bend_foot_down_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('bend_foot_down_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('foot_circles_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('foot_circles_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('lie_back_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('lie_back_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('balance', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts')], max_length=1)),
                ('coordination', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='EvalRidingExercises',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('comments', models.CharField(max_length=500, null=True)),
                ('basic_trail_rules', models.NullBooleanField(choices=[(1, 'Yes'), (0, 'No'), (2, 'Unknown')])),
                ('basic_trail_rules_com', models.CharField(max_length=100, null=True)),
                ('mount', models.NullBooleanField(choices=[(1, 'Yes'), (0, 'No'), (2, 'Unknown')])),
                ('mount_com', models.CharField(max_length=100, null=True)),
                ('dismount', models.NullBooleanField(choices=[(1, 'Yes'), (0, 'No'), (2, 'Unknown')])),
                ('dismount_com', models.CharField(max_length=100, null=True)),
                ('emergency_dismount', models.NullBooleanField(choices=[(1, 'Yes'), (0, 'No'), (2, 'Unknown')])),
                ('emergency_dismount_com', models.CharField(max_length=100, null=True)),
                ('four_natural_aids', models.NullBooleanField(choices=[(1, 'Yes'), (0, 'No'), (2, 'Unknown')])),
                ('four_natural_aids_com', models.CharField(max_length=100, null=True)),
                ('basic_control', models.NullBooleanField(choices=[(1, 'Yes'), (0, 'No'), (2, 'Unknown')])),
                ('basic_control_com', models.CharField(max_length=100, null=True)),
                ('reverse_at_walk', models.NullBooleanField(choices=[(1, 'Yes'), (0, 'No'), (2, 'Unknown')])),
                ('reverse_at_walk_com', models.CharField(max_length=100, null=True)),
                ('reverse_at_trot', models.NullBooleanField(choices=[(1, 'Yes'), (0, 'No'), (2, 'Unknown')])),
                ('reverse_at_trot_com', models.CharField(max_length=100, null=True)),
                ('never_ridden', models.NullBooleanField(choices=[(1, 'Yes'), (0, 'No'), (2, 'Unknown')])),
                ('never_ridden_com', models.CharField(max_length=100, null=True)),
                ('seat_at_walk', models.NullBooleanField(choices=[(1, 'Yes'), (0, 'No'), (2, 'Unknown')])),
                ('seat_at_walk_com', models.CharField(max_length=100, null=True)),
                ('seat_at_trot', models.NullBooleanField(choices=[(1, 'Yes'), (0, 'No'), (2, 'Unknown')])),
                ('seat_at_trot_com', models.CharField(max_length=100, null=True)),
                ('seat_at_canter', models.NullBooleanField(choices=[(1, 'Yes'), (0, 'No'), (2, 'Unknown')])),
                ('seat_at_canter_com', models.CharField(max_length=100, null=True)),
                ('basic_seat_english', models.NullBooleanField(choices=[(1, 'Yes'), (0, 'No'), (2, 'Unknown')])),
                ('basic_seat_english_com', models.CharField(max_length=100, null=True)),
                ('basic_seat_western', models.NullBooleanField(choices=[(1, 'Yes'), (0, 'No'), (2, 'Unknown')])),
                ('basic_seat_western_com', models.CharField(max_length=100, null=True)),
                ('hand_pos_english', models.NullBooleanField(choices=[(1, 'Yes'), (0, 'No'), (2, 'Unknown')])),
                ('hand_pos_english_com', models.CharField(max_length=100, null=True)),
                ('hand_post_western', models.NullBooleanField(choices=[(1, 'Yes'), (0, 'No'), (2, 'Unknown')])),
                ('hand_post_western_com', models.CharField(max_length=100, null=True)),
                ('two_point_trot', models.NullBooleanField(choices=[(1, 'Yes'), (0, 'No'), (2, 'Unknown')])),
                ('two_point_trot_com', models.CharField(max_length=100, null=True)),
                ('circle_trot_no_stirrups', models.NullBooleanField(choices=[(1, 'Yes'), (0, 'No'), (2, 'Unknown')])),
                ('circle_trot_no_stirrups_com', models.CharField(max_length=100, null=True)),
                ('circle_at_canter', models.NullBooleanField(choices=[(1, 'Yes'), (0, 'No'), (2, 'Unknown')])),
                ('circle_at_canter_com', models.CharField(max_length=100, null=True)),
                ('circle_canter_no_stirrups', models.NullBooleanField(choices=[(1, 'Yes'), (0, 'No'), (2, 'Unknown')])),
                ('circle_canter_no_stirrups_com', models.CharField(max_length=100, null=True)),
                ('two_point_canter', models.NullBooleanField(choices=[(1, 'Yes'), (0, 'No'), (2, 'Unknown')])),
                ('two_point_canter_com', models.CharField(max_length=100, null=True)),
                ('circle_at_walk', models.NullBooleanField(choices=[(1, 'Yes'), (0, 'No'), (2, 'Unknown')])),
                ('circle_at_walk_com', models.CharField(max_length=100, null=True)),
                ('circle_at_trot', models.NullBooleanField(choices=[(1, 'Yes'), (0, 'No'), (2, 'Unknown')])),
                ('circle_at_trot_com', models.CharField(max_length=100, null=True)),
                ('holds_handhold_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('holds_handhold_walk_com', models.CharField(max_length=100, null=True)),
                ('holds_handhold_sit_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('holds_handhold_sit_trot_com', models.CharField(max_length=100, null=True)),
                ('holds_handhold_post_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('holds_handhold_post_trot_com', models.CharField(max_length=100, null=True)),
                ('holds_handhold_canter', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('holds_handhold_canter_com', models.CharField(max_length=100, null=True)),
                ('holds_reins_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('holds_reins_walk_com', models.CharField(max_length=100, null=True)),
                ('holds_reins_sit_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('holds_reins_sit_trot_com', models.CharField(max_length=100, null=True)),
                ('holds_reins_post_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('holds_reins_post_trot_com', models.CharField(max_length=100, null=True)),
                ('holds_reins_canter', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('holds_reins_canter_com', models.CharField(max_length=100, null=True)),
                ('shorten_lengthen_reins_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('shorten_lengthen_reins_walk_com', models.CharField(max_length=100, null=True)),
                ('shorten_lengthen_reins_sit_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('shorten_lengthen_reins_sit_trot_com', models.CharField(max_length=100, null=True)),
                ('shorten_lengthen_reins_post_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('shorten_lengthen_reins_post_trot_com', models.CharField(max_length=100, null=True)),
                ('shorten_lengthen_reins_canter', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('shorten_lengthen_reins_canter_com', models.CharField(max_length=100, null=True)),
                ('can_control_horse_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('can_control_horse_walk_com', models.CharField(max_length=100, null=True)),
                ('can_control_horse_sit_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('can_control_horse_sit_trot_com', models.CharField(max_length=100, null=True)),
                ('can_control_horse_post_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('can_control_horse_post_trot_com', models.CharField(max_length=100, null=True)),
                ('can_control_horse_canter', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('can_control_horse_canter_com', models.CharField(max_length=100, null=True)),
                ('can_halt_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('can_halt_walk_com', models.CharField(max_length=100, null=True)),
                ('can_halt_sit_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('can_halt_sit_trot_com', models.CharField(max_length=100, null=True)),
                ('can_halt_post_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('can_halt_post_trot_com', models.CharField(max_length=100, null=True)),
                ('can_halt_canter', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('can_halt_canter_com', models.CharField(max_length=100, null=True)),
                ('drop_pickup_stirrups_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('drop_pickup_stirrups_walk_com', models.CharField(max_length=100, null=True)),
                ('drop_pickup_stirrups_sit_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('drop_pickup_stirrups_sit_trot_com', models.CharField(max_length=100, null=True)),
                ('drop_pickup_stirrups_post_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('drop_pickup_stirrups_post_trot_com', models.CharField(max_length=100, null=True)),
                ('drop_pickup_stirrups_canter', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('drop_pickup_stirrups_canter_com', models.CharField(max_length=100, null=True)),
                ('rides_no_stirrups_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('rides_no_stirrups_walk_com', models.CharField(max_length=100, null=True)),
                ('rides_no_stirrups_sit_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('rides_no_stirrups_sit_trot_com', models.CharField(max_length=100, null=True)),
                ('rides_no_stirrups_post_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('rides_no_stirrups_post_trot_com', models.CharField(max_length=100, null=True)),
                ('rides_no_stirrups_canter', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('rides_no_stirrups_canter_com', models.CharField(max_length=100, null=True)),
                ('maintain_half_seat_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('maintain_half_seat_walk_com', models.CharField(max_length=100, null=True)),
                ('maintain_half_seat_sit_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('maintain_half_seat_sit_trot_com', models.CharField(max_length=100, null=True)),
                ('maintain_half_seat_post_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('maintain_half_seat_post_trot_com', models.CharField(max_length=100, null=True)),
                ('maintain_half_seat_canter', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('maintain_half_seat_canter_com', models.CharField(max_length=100, null=True)),
                ('can_post_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('can_post_walk_com', models.CharField(max_length=100, null=True)),
                ('can_post_sit_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('can_post_sit_trot_com', models.CharField(max_length=100, null=True)),
                ('can_post_post_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('can_post_post_trot_com', models.CharField(max_length=100, null=True)),
                ('can_post_canter', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('can_post_canter_com', models.CharField(max_length=100, null=True)),
                ('proper_diagonal_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('proper_diagonal_walk_com', models.CharField(max_length=100, null=True)),
                ('proper_diagonal_sit_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('proper_diagonal_sit_trot_com', models.CharField(max_length=100, null=True)),
                ('proper_diagonal_post_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('proper_diagonal_post_trot_com', models.CharField(max_length=100, null=True)),
                ('proper_diagonal_canter', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('proper_diagonal_canter_com', models.CharField(max_length=100, null=True)),
                ('proper_lead_canter_sees', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('proper_lead_canter_sees_com', models.CharField(max_length=100, null=True)),
                ('proper_lead_canter_knows', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('proper_lead_canter_knows_com', models.CharField(max_length=100, null=True)),
                ('can_steer_over_cavalletti_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('can_steer_over_cavalletti_walk_com', models.CharField(max_length=100, null=True)),
                ('can_steer_over_cavalletti_sit_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('can_steer_over_cavalletti_sit_trot_com', models.CharField(max_length=100, null=True)),
                ('can_steer_over_cavalletti_post_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('can_steer_over_cavalletti_post_trot_com', models.CharField(max_length=100, null=True)),
                ('can_steer_over_cavalletti_canter', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('can_steer_over_cavalletti_canter_com', models.CharField(max_length=100, null=True)),
                ('jump_crossbar_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('jump_crossbar_walk_com', models.CharField(max_length=100, null=True)),
                ('jump_crossbar_sit_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('jump_crossbar_sit_trot_com', models.CharField(max_length=100, null=True)),
                ('jump_crossbar_post_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('jump_crossbar_post_trot_com', models.CharField(max_length=100, null=True)),
                ('jump_crossbar_canter', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('C', 'Partially completes')], max_length=1)),
                ('jump_crossbar_canter_com', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Grouping',
            fields=[
                ('class_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Horse',
            fields=[
                ('horse_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=75)),
                ('description', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Incidents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('details', models.CharField(max_length=2500)),
            ],
        ),
        migrations.CreateModel(
            name='IntakeAssessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('staff_reviewed_medical_info', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], max_length=1)),
                ('staff_reviewed_medical_info_date', models.DateField()),
                ('precautions', models.CharField(max_length=500)),
                ('impulsive', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], max_length=1)),
                ('eye_contact', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], max_length=1)),
                ('attention_span', models.CharField(choices=[('P', 'Poor'), ('F', 'Fair'), ('G', 'Good')], max_length=1)),
                ('interacts_with_others', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], max_length=1)),
                ('communication_verbal', models.CharField(choices=[('Y', 'Yes'), ('N', 'No'), ('I', 'Impaired')], max_length=1, null=True)),
                ('communication_verbal_comments', models.CharField(max_length=100)),
                ('language_skills_signs', models.CharField(choices=[('Y', 'Yes'), ('N', 'No'), ('S', 'Some')], max_length=1, null=True)),
                ('language_skills_comments', models.CharField(max_length=100, null=True)),
                ('visual_impaired', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], max_length=1, null=True)),
                ('visual_comments', models.CharField(max_length=100, null=True)),
                ('hearing_impaired', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], max_length=1, null=True)),
                ('hearing_comments', models.CharField(max_length=100, null=True)),
                ('tactile', models.CharField(choices=[('N', 'No tactile issues'), ('T', "Don't touch me!"), ('L', 'Light touch'), ('P', 'Deep pressure')], max_length=1, null=True)),
                ('tactile_comments', models.CharField(max_length=100, null=True)),
                ('motor_skills_gross_left', models.CharField(choices=[('I', 'Independent'), ('M', 'Minimal asst.'), ('F', 'Full asst.'), ('N', 'n/a')], default='N', max_length=1, null=True)),
                ('motor_skills_gross_right', models.CharField(choices=[('I', 'Independent'), ('M', 'Minimal asst.'), ('F', 'Full asst.'), ('N', 'n/a')], default='N', max_length=1, null=True)),
                ('motor_skills_fine_left', models.CharField(choices=[('I', 'Independent'), ('M', 'Minimal asst.'), ('F', 'Full asst.'), ('N', 'n/a')], default='N', max_length=1, null=True)),
                ('motor_skills_fine_right', models.CharField(choices=[('I', 'Independent'), ('M', 'Minimal asst.'), ('F', 'Full asst.'), ('N', 'n/a')], default='N', max_length=1, null=True)),
                ('motor_skills_comments', models.CharField(max_length=100, null=True)),
                ('posture_forward_halt', models.NullBooleanField()),
                ('posture_forward_walk', models.NullBooleanField()),
                ('posture_back_halt', models.NullBooleanField()),
                ('posture_back_walk', models.NullBooleanField()),
                ('posture_center_halt', models.NullBooleanField()),
                ('posture_center_walk', models.NullBooleanField()),
                ('posture_chairseat_halt', models.NullBooleanField()),
                ('posture_chairseat_walk', models.NullBooleanField()),
                ('posture_aligned_halt', models.NullBooleanField()),
                ('posture_aligned_walk', models.NullBooleanField()),
                ('rein_use_hold_halt', models.CharField(choices=[('I', 'Independent'), ('M', 'Minimal asst.'), ('F', 'Full asst.'), ('N', 'n/a')], default='N', max_length=1, null=True)),
                ('rein_use_steer_left_right_halt', models.CharField(choices=[('I', 'Independent'), ('M', 'Minimal asst.'), ('F', 'Full asst.'), ('N', 'n/a')], default='N', max_length=1, null=True)),
                ('rein_use_hold_walk', models.CharField(choices=[('I', 'Independent'), ('M', 'Minimal asst.'), ('F', 'Full asst.'), ('N', 'n/a')], default='N', max_length=1, null=True)),
                ('rein_use_steer_left_right_walk', models.CharField(choices=[('I', 'Independent'), ('M', 'Minimal asst.'), ('F', 'Full asst.'), ('N', 'n/a')], default='N', max_length=1, null=True)),
                ('mounted_comments', models.CharField(max_length=100)),
                ('risk_benefit_comments', models.CharField(max_length=500)),
                ('goals_expectations', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='LiabilityRelease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('signature', models.CharField(max_length=75)),
            ],
        ),
        migrations.CreateModel(
            name='MediaRelease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('consent', models.CharField(choices=[('Y', 'consent'), ('N', 'do not consent')], max_length=1)),
                ('signature', models.CharField(max_length=75)),
            ],
        ),
        migrations.CreateModel(
            name='MedicalInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('primary_physician_name', models.CharField(max_length=75)),
                ('primary_physician_phone', localflavor.us.models.PhoneNumberField(max_length=20)),
                ('last_seen_by_physician_date', models.DateField()),
                ('last_seen_by_physician_reason', models.CharField(max_length=250)),
                ('allergies_conditions_that_exclude', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], max_length=1)),
                ('allergies_conditions_that_exclude_description', models.CharField(max_length=500, null=True)),
                ('heat_exhaustion_stroke', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], max_length=1)),
                ('tetanus_shot_last_ten_years', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], max_length=1)),
                ('seizures_last_six_monthes', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], max_length=1)),
                ('doctor_concered_re_horse_activites', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], max_length=1)),
                ('physical_or_mental_issues_affecting_riding', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], max_length=1)),
                ('physical_or_mental_issues_affecting_riding_description', models.CharField(max_length=500, null=True)),
                ('restriction_for_horse_activity_last_five_years', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], max_length=1)),
                ('restriction_for_horse_activity_last_five_years_description', models.CharField(max_length=500, null=True)),
                ('present_restrictions_for_horse_activity', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], max_length=1)),
                ('limiting_surgeries_last_six_monthes', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], max_length=1)),
                ('limiting_surgeries_last_six_monthes_description', models.CharField(max_length=500, null=True)),
                ('signature', models.CharField(max_length=75)),
                ('currently_taking_any_medication', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], max_length=1)),
                ('pregnant', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('medication_name', models.CharField(max_length=100)),
                ('reason_taken', models.CharField(max_length=50)),
                ('frequency', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ObservationEvaluation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('class_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbar_db.Grouping')),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('participant_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=75)),
                ('birth_date', models.DateField()),
                ('email', models.EmailField(max_length=254)),
                ('weight', models.DecimalField(decimal_places=1, max_digits=4)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('guardian_name', models.CharField(max_length=75)),
                ('height', models.DecimalField(decimal_places=1, max_digits=4)),
                ('minor_status', models.CharField(choices=[('M', 'Minor'), ('G', 'Adult with guardian'), ('A', 'Independent adult')], max_length=1)),
                ('address_street', models.CharField(max_length=150)),
                ('address_city', models.CharField(max_length=50)),
                ('address_state', localflavor.us.models.USStateField(choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AS', 'American Samoa'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('AA', 'Armed Forces Americas'), ('AE', 'Armed Forces Europe'), ('AP', 'Armed Forces Pacific'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('DC', 'District of Columbia'), ('FL', 'Florida'), ('GA', 'Georgia'), ('GU', 'Guam'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('MP', 'Northern Mariana Islands'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('PR', 'Puerto Rico'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VI', 'Virgin Islands'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming')], max_length=2)),
                ('address_zip', localflavor.us.models.USZipCodeField(max_length=10)),
                ('phone_home', localflavor.us.models.PhoneNumberField(max_length=20)),
                ('phone_cell', localflavor.us.models.PhoneNumberField(max_length=20)),
                ('phone_work', localflavor.us.models.PhoneNumberField(max_length=20)),
                ('school_institution', models.CharField(blank=True, max_length=150)),
                ('handedness', models.CharField(choices=[('L', 'Left'), ('R', 'Right'), ('A', 'Ambidextrous'), ('N', 'No meaningful hand use')], max_length=1, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ParticipantType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participant_type', models.CharField(choices=[('P', 'Participant'), ('V', 'Volunteer'), ('S', 'Staff')], max_length=1)),
                ('participant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant')),
            ],
        ),
        migrations.CreateModel(
            name='PhoneLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('details', models.CharField(max_length=2500)),
                ('participant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant')),
            ],
        ),
        migrations.CreateModel(
            name='PhysRelease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('health_provider_name', models.CharField(max_length=75)),
                ('health_provider_title', models.CharField(max_length=50)),
                ('health_provider_address', models.CharField(max_length=255)),
                ('health_provider_phone', localflavor.us.models.PhoneNumberField(max_length=20)),
                ('health_provider_signature', models.CharField(max_length=75)),
                ('health_provider_license_num', models.CharField(max_length=10)),
                ('participant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant')),
            ],
        ),
        migrations.CreateModel(
            name='SeizureEval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('type_of_seizure', models.CharField(choices=[('G', 'Grand'), ('P', 'Petite'), ('C', 'Controlled'), ('N', 'None')], max_length=1)),
                ('date_of_last_seizure', models.DateField()),
                ('duration_of_last_seizure', models.CharField(max_length=100)),
                ('typical_cause', models.CharField(max_length=100)),
                ('seizure_indicators', models.CharField(max_length=500)),
                ('after_effect', models.CharField(max_length=100)),
                ('during_seizure_stare', models.NullBooleanField()),
                ('during_seizure_stare_length', models.CharField(max_length=100, null=True)),
                ('during_seizure_walks', models.NullBooleanField()),
                ('during_seizure_aimless', models.NullBooleanField()),
                ('during_seizure_cry_etc', models.NullBooleanField()),
                ('during_seizure_bladder_bowel', models.NullBooleanField()),
                ('during_seizure_confused_etc', models.NullBooleanField()),
                ('during_seizure_other', models.NullBooleanField()),
                ('during_seizure_other_description', models.CharField(max_length=500, null=True)),
                ('knows_when_will_occur', models.NullBooleanField()),
                ('can_communicate_when_will_occur', models.NullBooleanField()),
                ('action_to_take_do_nothing', models.NullBooleanField()),
                ('action_to_take_dismount', models.NullBooleanField()),
                ('action_to_take_allow_time', models.NullBooleanField()),
                ('action_to_take_allow_time_how_long', models.DecimalField(decimal_places=0, max_digits=2, null=True)),
                ('action_to_take_report_immediately', models.NullBooleanField()),
                ('action_to_take_send_note', models.NullBooleanField()),
                ('seizure_frequency', models.CharField(max_length=100)),
                ('signature', models.CharField(max_length=75)),
                ('participant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('session_ID', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField()),
                ('tack', models.CharField(max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SessionGoals',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal_type', models.CharField(choices=[('S', 'Short term goal'), ('L', 'Long term goal')], max_length=1)),
                ('goal_description', models.CharField(max_length=500)),
                ('motivation', models.CharField(max_length=250)),
                ('participant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant')),
                ('session_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Session')),
            ],
        ),
        migrations.CreateModel(
            name='SessionPlanInd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('horse_leader', models.CharField(max_length=75, null=True)),
                ('participant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant')),
            ],
        ),
        migrations.CreateModel(
            name='Sidewalker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sidewalker_pace', models.CharField(choices=[('W', 'Walk'), ('T', 'Trot')], max_length=1)),
                ('sidewalker_position', models.CharField(choices=[('S', 'Spotter'), ('H', 'Heel hold'), ('T', 'Over thigh'), ('O', 'Other')], max_length=1)),
                ('sidewalker_position_other_description', models.CharField(max_length=100, null=True)),
                ('session_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Session')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student', to='cbar_db.Participant')),
                ('volunteer_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='volunteer', to='cbar_db.Participant')),
            ],
        ),
        migrations.AddField(
            model_name='observationevaluation',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='medication',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='medicalinfo',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='medicalinfo',
            name='physical_release',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbar_db.PhysRelease'),
        ),
        migrations.AddField(
            model_name='mediarelease',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='liabilityrelease',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='intakeassessment',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='incidents',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='evalridingexercises',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='evalphysical',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='evalhorsemanship',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='evalattitude',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='donation',
            name='donor_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Donor'),
        ),
        migrations.AddField(
            model_name='donation',
            name='horse_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Horse'),
        ),
        migrations.AddField(
            model_name='donation',
            name='participant_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='diagnosis',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='confidentialitypolicy',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='caregiver',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='backgroundcheck',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='authorizeemergencymedicaltreatment',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='authorizeduser',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='adaptationsneeded',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AlterUniqueTogether(
            name='sessionplanind',
            unique_together=set([('participant_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='sessiongoals',
            unique_together=set([('participant_id', 'session_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='seizureeval',
            unique_together=set([('participant_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='physrelease',
            unique_together=set([('participant_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='phonelog',
            unique_together=set([('participant_id', 'date', 'time')]),
        ),
        migrations.AlterUniqueTogether(
            name='participanttype',
            unique_together=set([('participant_id', 'participant_type')]),
        ),
        migrations.AlterUniqueTogether(
            name='observationevaluation',
            unique_together=set([('participant_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='medication',
            unique_together=set([('participant_id', 'date', 'medication_name')]),
        ),
        migrations.AlterUniqueTogether(
            name='medicalinfo',
            unique_together=set([('participant_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='mediarelease',
            unique_together=set([('participant_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='liabilityrelease',
            unique_together=set([('participant_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='intakeassessment',
            unique_together=set([('participant_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='incidents',
            unique_together=set([('participant_id', 'date', 'time')]),
        ),
        migrations.AlterUniqueTogether(
            name='evalridingexercises',
            unique_together=set([('participant_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='evalphysical',
            unique_together=set([('participant_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='evalhorsemanship',
            unique_together=set([('participant_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='evalattitude',
            unique_together=set([('participant_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='diagnosis',
            unique_together=set([('participant_id', 'diagnosis')]),
        ),
        migrations.AlterUniqueTogether(
            name='confidentialitypolicy',
            unique_together=set([('participant_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='backgroundcheck',
            unique_together=set([('participant_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='authorizeemergencymedicaltreatment',
            unique_together=set([('participant_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='authorizeduser',
            unique_together=set([('participant_id', 'authorized_user_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='adaptationsneeded',
            unique_together=set([('participant_id', 'date')]),
        ),
    ]
