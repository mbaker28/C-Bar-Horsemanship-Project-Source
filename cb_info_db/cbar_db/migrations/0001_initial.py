# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-03-21 18:30
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdaptationsNeeded',
            fields=[
                ('adaptation_id', models.AutoField(primary_key=True, serialize=False)),
                ('mount_assistance_required', models.CharField(choices=[('I', 'Independent'), ('M', 'Minimal assistance'), ('F', 'Full assistance')], max_length=1)),
                ('mount_device_needed', models.CharField(choices=[('P', 'Portable block'), ('S', 'Static block'), ('R', 'Ramp')], max_length=1, null=True)),
                ('mount_type', models.CharField(choices=[('T', 'Over crest'), ('P', 'Over croup')], max_length=1, null=True)),
                ('dismount_assistance_required', models.CharField(choices=[('I', 'Independent'), ('M', 'Minimal assistance'), ('F', 'Full assistance')], max_length=1)),
                ('dismount_type', models.CharField(choices=[('A', 'Over croup'), ('B', 'Over croup with left foot in stirrup'), ('C', 'Over crest')], max_length=1)),
                ('posture_standing', models.CharField(max_length=100)),
                ('posture_sitting', models.CharField(max_length=100)),
                ('posture_mounted', models.CharField(max_length=100)),
                ('ambulatory_status', models.CharField(choices=[('I', 'Walks independently'), ('C', 'Independent with cane/bronco/walker'), ('N', 'Wheelchair with minimal or no assistance'), ('A', 'Wheelchair with full assistance'), ('O', 'Other')], max_length=1)),
                ('ambulatory_status_other', models.CharField(max_length=100, null=True)),
                ('gait_flat', models.CharField(max_length=100)),
                ('gait_uneven', models.CharField(max_length=100)),
                ('gait_incline', models.CharField(max_length=100)),
                ('gait_decline', models.CharField(max_length=100)),
                ('gait_stairs', models.CharField(max_length=100)),
                ('gait_balance', models.CharField(max_length=100)),
                ('gait_standing_up', models.CharField(max_length=100)),
                ('gait_standing_down', models.CharField(max_length=100)),
                ('gait_straddle_up', models.CharField(max_length=100)),
                ('gait_straddle_down', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='AuthorizedUser',
            fields=[
                ('authorized_user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AuthorizeEmergencyMedicalTreatment',
            fields=[
                ('date', models.DateField(primary_key=True, serialize=False)),
                ('pref_medical_facility', models.CharField(max_length=70)),
                ('insurance_provider', models.CharField(max_length=70)),
                ('insurance_policy_num', models.CharField(max_length=20)),
                ('emerg_contact_name', models.CharField(max_length=75)),
                ('emerg_contact_phone', models.CharField(max_length=15)),
                ('emerg_contact_relation', models.CharField(max_length=50)),
                ('alt_emerg_procedure', models.CharField(max_length=500, null=True)),
                ('consents_emerg_med_treatment', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='BackgroundCheck',
            fields=[
                ('date', models.DateField(primary_key=True, serialize=False)),
                ('signature', models.CharField(max_length=75)),
                ('driver_license_num', models.CharField(max_length=18)),
            ],
        ),
        migrations.CreateModel(
            name='Caregiver',
            fields=[
                ('caregiver_ID', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=75)),
                ('phone', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='ConfidentialityPolicy',
            fields=[
                ('date', models.DateField(primary_key=True, serialize=False)),
                ('agreement', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Diagnosis',
            fields=[
                ('diagnosis', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('diagnosis_type', models.CharField(choices=[('P', 'Primary'), ('S', 'Secondary')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Donation',
            fields=[
                ('donation_id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('donation_type', models.CharField(choices=[('H', 'Horse adoption'), ('P', 'Participant adoption'), ('M', 'Monetary donation')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Donor',
            fields=[
                ('donor_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=75)),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='EvalAttitude',
            fields=[
                ('date', models.DateField(primary_key=True, serialize=False)),
                ('walking_through_barn', models.CharField(blank=True, choices=[('A', 'Willing'), ('B', 'Willing, but needs encouragement'), ('C', 'Unwilling'), ('D', 'Well motivated'), ('E', 'Somewhat motivated'), ('F', 'Not motivated'), ('G', 'Smiles, appears happy'), ('H', 'Apprehensive about the whole thing')], max_length=1)),
                ('looking_at_horses', models.CharField(blank=True, choices=[('A', 'Willing'), ('B', 'Willing, but needs encouragement'), ('C', 'Unwilling'), ('D', 'Well motivated'), ('E', 'Somewhat motivated'), ('F', 'Not motivated'), ('G', 'Smiles, appears happy'), ('H', 'Apprehensive about the whole thing')], max_length=1)),
                ('petting_horses', models.CharField(blank=True, choices=[('A', 'Willing'), ('B', 'Willing, but needs encouragement'), ('C', 'Unwilling'), ('D', 'Well motivated'), ('E', 'Somewhat motivated'), ('F', 'Not motivated'), ('G', 'Smiles, appears happy'), ('H', 'Apprehensive about the whole thing')], max_length=1)),
                ('up_down_ramp', models.CharField(blank=True, choices=[('A', 'Willing'), ('B', 'Willing, but needs encouragement'), ('C', 'Unwilling'), ('D', 'Well motivated'), ('E', 'Somewhat motivated'), ('F', 'Not motivated'), ('G', 'Smiles, appears happy'), ('H', 'Apprehensive about the whole thing')], max_length=1)),
                ('mounting_before', models.CharField(blank=True, choices=[('A', 'Willing'), ('B', 'Willing, but needs encouragement'), ('C', 'Unwilling'), ('D', 'Well motivated'), ('E', 'Somewhat motivated'), ('F', 'Not motivated'), ('G', 'Smiles, appears happy'), ('H', 'Apprehensive about the whole thing')], max_length=1)),
                ('mounting_after', models.CharField(blank=True, choices=[('A', 'Willing'), ('B', 'Willing, but needs encouragement'), ('C', 'Unwilling'), ('D', 'Well motivated'), ('E', 'Somewhat motivated'), ('F', 'Not motivated'), ('G', 'Smiles, appears happy'), ('H', 'Apprehensive about the whole thing')], max_length=1)),
                ('riding_before', models.CharField(blank=True, choices=[('A', 'Willing'), ('B', 'Willing, but needs encouragement'), ('C', 'Unwilling'), ('D', 'Well motivated'), ('E', 'Somewhat motivated'), ('F', 'Not motivated'), ('G', 'Smiles, appears happy'), ('H', 'Apprehensive about the whole thing')], max_length=1)),
                ('riding_during', models.CharField(blank=True, choices=[('A', 'Willing'), ('B', 'Willing, but needs encouragement'), ('C', 'Unwilling'), ('D', 'Well motivated'), ('E', 'Somewhat motivated'), ('F', 'Not motivated'), ('G', 'Smiles, appears happy'), ('H', 'Apprehensive about the whole thing')], max_length=1)),
                ('riding_after', models.CharField(blank=True, choices=[('A', 'Willing'), ('B', 'Willing, but needs encouragement'), ('C', 'Unwilling'), ('D', 'Well motivated'), ('E', 'Somewhat motivated'), ('F', 'Not motivated'), ('G', 'Smiles, appears happy'), ('H', 'Apprehensive about the whole thing')], max_length=1)),
                ('understands_directions', models.CharField(blank=True, choices=[('A', 'Willing'), ('B', 'Willing, but needs encouragement'), ('C', 'Unwilling'), ('D', 'Well motivated'), ('E', 'Somewhat motivated'), ('F', 'Not motivated'), ('G', 'Smiles, appears happy'), ('H', 'Apprehensive about the whole thing')], max_length=1)),
                ('participates_exercises', models.CharField(blank=True, choices=[('A', 'Willing'), ('B', 'Willing, but needs encouragement'), ('C', 'Unwilling'), ('D', 'Well motivated'), ('E', 'Somewhat motivated'), ('F', 'Not motivated'), ('G', 'Smiles, appears happy'), ('H', 'Apprehensive about the whole thing')], max_length=1)),
                ('participates_games', models.CharField(blank=True, choices=[('A', 'Willing'), ('B', 'Willing, but needs encouragement'), ('C', 'Unwilling'), ('D', 'Well motivated'), ('E', 'Somewhat motivated'), ('F', 'Not motivated'), ('G', 'Smiles, appears happy'), ('H', 'Apprehensive about the whole thing')], max_length=1)),
                ('general_attitude', models.CharField(blank=True, choices=[('A', 'Willing'), ('B', 'Willing, but needs encouragement'), ('C', 'Unwilling'), ('D', 'Well motivated'), ('E', 'Somewhat motivated'), ('F', 'Not motivated'), ('G', 'Smiles, appears happy'), ('H', 'Apprehensive about the whole thing')], max_length=1)),
                ('comprehension', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts')], max_length=1)),
                ('confidence', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts')], max_length=1)),
                ('attention', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts')], max_length=1)),
                ('relaxation', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='EvalHorsemanship',
            fields=[
                ('date', models.DateField(primary_key=True, serialize=False)),
                ('rules_and_reasons', models.NullBooleanField()),
                ('parts_of_horse', models.NullBooleanField()),
                ('parts_of_saddle_english', models.NullBooleanField()),
                ('parts_of_saddle_western', models.NullBooleanField()),
                ('parts_of_bridle_english', models.NullBooleanField()),
                ('parts_of_bridle_western', models.NullBooleanField()),
                ('approach_tied_horse', models.NullBooleanField()),
                ('methods_of_tying', models.NullBooleanField()),
                ('halter', models.NullBooleanField()),
                ('lead', models.NullBooleanField()),
                ('groom', models.NullBooleanField()),
                ('can_saddle_horse_english', models.NullBooleanField()),
                ('can_saddle_horse_western', models.NullBooleanField()),
                ('can_bridle_horse_english', models.NullBooleanField()),
                ('can_bridle_horse_western', models.NullBooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='EvalPhysical',
            fields=[
                ('date', models.DateField(primary_key=True, serialize=False)),
                ('arms_head_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('arms_head_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('arms_side_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('arms_side_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('touch_tail_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('touch_talk_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('twist_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('twist_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('touch_ears_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('touch_ears_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('arm_circle_back_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('arm_circle_back_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('arm_circle_fwd_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('arm_circle_fwd_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('hand_circle_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('hand_circle_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('touch_right_tow_w_left_hand_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('touch_right_tow_w_left_hand_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('touch_left_tow_w_right_hand_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('touch_left_tow_w_right_hand_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('touch_both_toes_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('touch_both_toes_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('swing_legs_back_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('swing_legs_back_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('swing_legs_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('swing_legs_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('stand_in_stirrups_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('stand_in_stirrups_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('bend_foot_up_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('bend_foot_up_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('bend_foot_down_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('bend_foot_down_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('foot_circles_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('foot_circles_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('lie_back_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('lie_back_halt', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('balance', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts')], max_length=1)),
                ('coordination', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='EvalRidingExercises',
            fields=[
                ('date', models.DateField(primary_key=True, serialize=False)),
                ('comments', models.CharField(max_length=500, null=True)),
                ('basic_trail_rules', models.NullBooleanField()),
                ('mount', models.NullBooleanField()),
                ('dismount', models.NullBooleanField()),
                ('emergency_dismount', models.NullBooleanField()),
                ('four_natural_aids', models.NullBooleanField()),
                ('basic_control', models.NullBooleanField()),
                ('reverse_at_walk', models.NullBooleanField()),
                ('reverse_at_trot', models.NullBooleanField()),
                ('never_ridden', models.NullBooleanField()),
                ('seat_at_walk', models.NullBooleanField()),
                ('seat_at_trot', models.NullBooleanField()),
                ('seat_at_canter', models.NullBooleanField()),
                ('basic_seat_english', models.NullBooleanField()),
                ('basic_seat_western', models.NullBooleanField()),
                ('hand_pos_english', models.NullBooleanField()),
                ('hand_post_western', models.NullBooleanField()),
                ('two_point_trot', models.NullBooleanField()),
                ('circle_trot_no_stirrups', models.NullBooleanField()),
                ('circle_at_canter', models.NullBooleanField()),
                ('circle_canter_no_stirrups', models.NullBooleanField()),
                ('two_point_canter', models.NullBooleanField()),
                ('circle_at_walk', models.NullBooleanField()),
                ('circle_at_trot', models.NullBooleanField()),
                ('holds_handhold_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('holds_handhold_sit_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('holds_handhold_post_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('holds_handhold_canter', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('holds_reins_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('holds_reins_sit_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('holds_reins_post_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('holds_reins_canter', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('shorten_lengthen_reins_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('shorten_lengthen_reins_sit_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('shorten_lengthen_reins_post_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('shorten_lengthen_reins_canter', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('can_control_horse_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('can_control_horse_sit_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('can_control_horse_post_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('can_control_horse_canter', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('can_halt_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('can_halt_sit_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('can_halt_post_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('can_halt_canter', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('drop_pickup_stirrups_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('drop_pickup_stirrups_sit_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('drop_pickup_stirrups_post_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('drop_pickup_stirrups_canter', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('rides_no_stirrups_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('rides_no_stirrups_sit_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('rides_no_stirrups_post_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('rides_no_stirrups_canter', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('maintain_half_seat_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('maintain_half_seat_sit_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('maintain_half_seat_post_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('maintain_half_seat_canter', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('can_post_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('can_post_sit_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('can_post_post_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('can_post_canter', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('proper_diagonal_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('proper_diagonal_sit_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('proper_diagonal_post_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('proper_diagonal_canter', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('proper_lead_canter_sees', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('proper_lead_canter_knows', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('can_steer_over_cavalletti_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('can_steer_over_cavalletti_sit_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('can_steer_over_cavalletti_post_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('can_steer_over_cavalletti_canter', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('jump_crossbar_walk', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('jump_crossbar_sit_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('jump_crossbar_post_trot', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
                ('jump_crossbar_canter', models.CharField(blank=True, choices=[('U', 'Unsatisfactory'), ('P', 'Poor'), ('F', 'Fair'), ('G', 'Good'), ('E', 'Excellent'), ('N', 'Rider not able to perform due to disability'), ('A', 'Attempts'), ('P', 'Partially completes')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Grouping',
            fields=[
                ('class_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Horse',
            fields=[
                ('horse_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=75)),
                ('description', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='MediaRelease',
            fields=[
                ('date', models.DateField(primary_key=True, serialize=False)),
                ('consent', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], max_length=1)),
                ('signature', models.CharField(max_length=75)),
            ],
        ),
        migrations.CreateModel(
            name='MedicalInfo',
            fields=[
                ('date', models.DateField(primary_key=True, serialize=False)),
                ('primary_physician_name', models.CharField(max_length=75)),
                ('primary_physician_phone', models.CharField(max_length=15)),
                ('last_seen_by_physician_date', models.DateField()),
                ('last_seen_by_physician_reason', models.CharField(max_length=250)),
                ('allergies_conditions_that_exclude', models.BooleanField()),
                ('allergies_conditions_that_exclude_description', models.CharField(max_length=500, null=True)),
                ('heat_exhaustion_stroke', models.BooleanField()),
                ('tetanus_shot_last_ten_years', models.BooleanField()),
                ('seizures_last_six_monthes', models.BooleanField()),
                ('doctor_concered_re_horse_activites', models.BooleanField()),
                ('physical_or_mental_issues_affecting_riding', models.BooleanField()),
                ('physical_or_mental_issues_affecting_riding_description', models.CharField(max_length=500, null=True)),
                ('restriction_for_horse_activity_last_five_years', models.BooleanField()),
                ('restriction_for_horse_activity_last_five_years_description', models.CharField(max_length=500, null=True)),
                ('present_restrictions_for_horse_activity', models.BooleanField()),
                ('limiting_surgeries_last_six_monthes', models.BooleanField()),
                ('signature', models.CharField(max_length=75)),
            ],
        ),
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('medication_name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('duration_taken', models.CharField(max_length=25)),
                ('frequency', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='ObservationEvaluation',
            fields=[
                ('date', models.DateField(primary_key=True, serialize=False)),
                ('class_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbar_db.Grouping')),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('participant_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=75)),
                ('birth_date', models.DateField()),
                ('email', models.EmailField(max_length=254)),
                ('weight', models.DecimalField(decimal_places=1, max_digits=4)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('guardian_name', models.CharField(max_length=75)),
                ('height', models.DecimalField(decimal_places=1, max_digits=4)),
                ('minor_status', models.CharField(choices=[('M', 'Minor'), ('G', 'Adult with guardian'), ('A', 'Independent adult')], max_length=1)),
                ('address_street', models.CharField(max_length=150)),
                ('address_city', models.CharField(max_length=50)),
                ('address_zip', models.CharField(max_length=6)),
                ('phone_home', models.CharField(max_length=15)),
                ('phone_cell_work', models.CharField(max_length=15)),
                ('school_institution', models.CharField(blank=True, max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='ParticipantType',
            fields=[
                ('participant_type', models.CharField(choices=[('P', 'Participant'), ('V', 'Volunteer'), ('S', 'Staff')], max_length=1, primary_key=True, serialize=False)),
                ('participant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant')),
            ],
        ),
        migrations.CreateModel(
            name='PhysRelease',
            fields=[
                ('date', models.DateField(primary_key=True, serialize=False)),
                ('health_provider_name', models.CharField(max_length=75)),
                ('health_provider_title', models.CharField(max_length=50)),
                ('health_provider_address', models.CharField(max_length=255)),
                ('health_provider_phone', models.CharField(max_length=15)),
                ('health_provider_signature', models.CharField(max_length=75)),
                ('health_provider_license_num', models.CharField(max_length=10)),
                ('participant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant')),
            ],
        ),
        migrations.CreateModel(
            name='SeizureEval',
            fields=[
                ('date', models.DateField(primary_key=True, serialize=False)),
                ('date_of_last_seizure', models.DateField()),
                ('duration_of_last_seizure', models.DurationField()),
                ('typical_cause', models.CharField(max_length=100)),
                ('seizure_indicators', models.CharField(max_length=500)),
                ('after_effect', models.CharField(max_length=100)),
                ('during_seizure_stare', models.BooleanField()),
                ('during_seizure_stare_length', models.DurationField(null=True)),
                ('during_seizure_walks', models.BooleanField()),
                ('during_seizure_aimless', models.BooleanField()),
                ('during_seizure_cry_etc', models.BooleanField()),
                ('during_seizure_bladder_bowel', models.BooleanField()),
                ('during_seizure_confused_etc', models.BooleanField()),
                ('during_seizure_other', models.CharField(max_length=500, null=True)),
                ('knows_when_will_occur', models.BooleanField()),
                ('can_communicate_when_will_occur', models.BooleanField()),
                ('actions_to_take', models.CharField(choices=[('DN', 'Do nothing'), ('DM', 'Dismount from horse'), ('AT', 'Allow time to rest and re-orient'), ('RI', 'Report observations to parents/guardians immediately'), ('SN', 'Send note home to parent/guardian')], max_length=2)),
                ('participant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant')),
            ],
        ),
        migrations.CreateModel(
            name='SeizureType',
            fields=[
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('session_ID', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField()),
                ('tack', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='SessionGoals',
            fields=[
                ('session_goals_id', models.AutoField(primary_key=True, serialize=False)),
                ('goal_type', models.CharField(choices=[('S', 'Short term goal'), ('L', 'Long term goal')], max_length=1)),
                ('goal_description', models.CharField(max_length=500)),
                ('motiviation', models.CharField(max_length=250)),
                ('participant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant')),
                ('session_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Session')),
            ],
        ),
        migrations.CreateModel(
            name='Sidewalker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sidewalker_pace', models.CharField(choices=[('W', 'Walk'), ('T', 'Trot')], max_length=1)),
                ('sidewalker_position', models.CharField(choices=[('S', 'Spotter'), ('H', 'Heel hold'), ('T', 'Over thigh'), ('O', 'Other')], max_length=1)),
                ('sidewalker_position_other_description', models.CharField(max_length=100, null=True)),
                ('session_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Session')),
                ('subject_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject', to='cbar_db.Participant')),
                ('volunteer_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='volunteer', to='cbar_db.Participant')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='session',
            unique_together=set([('session_ID', 'date')]),
        ),
        migrations.AddField(
            model_name='seizureeval',
            name='type_of_seizure',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbar_db.SeizureType'),
        ),
        migrations.AddField(
            model_name='observationevaluation',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='medication',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='medicalinfo',
            name='medication_name',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbar_db.Medication'),
        ),
        migrations.AddField(
            model_name='medicalinfo',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='medicalinfo',
            name='physical_release',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cbar_db.PhysRelease'),
        ),
        migrations.AddField(
            model_name='mediarelease',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='evalridingexercises',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='evalphysical',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='evalhorsemanship',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='evalattitude',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='donation',
            name='donor_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Donor'),
        ),
        migrations.AddField(
            model_name='donation',
            name='horse_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Horse'),
        ),
        migrations.AddField(
            model_name='donation',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='diagnosis',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='confidentialitypolicy',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='caregiver',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='backgroundcheck',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='authorizeemergencymedicaltreatment',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='authorizeduser',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AddField(
            model_name='adaptationsneeded',
            name='participant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbar_db.Participant'),
        ),
        migrations.AlterUniqueTogether(
            name='sessiongoals',
            unique_together=set([('participant_id', 'session_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='seizureeval',
            unique_together=set([('participant_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='physrelease',
            unique_together=set([('participant_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='participanttype',
            unique_together=set([('participant_id', 'participant_type')]),
        ),
        migrations.AlterUniqueTogether(
            name='observationevaluation',
            unique_together=set([('participant_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='medication',
            unique_together=set([('participant_id', 'medication_name')]),
        ),
        migrations.AlterUniqueTogether(
            name='medicalinfo',
            unique_together=set([('participant_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='mediarelease',
            unique_together=set([('participant_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='evalridingexercises',
            unique_together=set([('participant_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='evalphysical',
            unique_together=set([('participant_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='evalhorsemanship',
            unique_together=set([('participant_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='evalattitude',
            unique_together=set([('participant_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='diagnosis',
            unique_together=set([('participant_id', 'diagnosis')]),
        ),
        migrations.AlterUniqueTogether(
            name='confidentialitypolicy',
            unique_together=set([('participant_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='backgroundcheck',
            unique_together=set([('participant_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='authorizeemergencymedicaltreatment',
            unique_together=set([('participant_id', 'date')]),
        ),
        migrations.AlterUniqueTogether(
            name='authorizeduser',
            unique_together=set([('participant_id', 'authorized_user_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='adaptationsneeded',
            unique_together=set([('participant_id', 'adaptation_id')]),
        ),
    ]
